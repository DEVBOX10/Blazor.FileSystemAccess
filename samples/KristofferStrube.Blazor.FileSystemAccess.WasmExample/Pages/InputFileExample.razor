@page "/InputFileExample"
@inject FileSystemAccessService FileSystemAccessService

<PageTitle>File System Access - InputFile Example</PageTitle>

We can read the bytes from a <code>IBrowserFile</code> from the native <code>InputFile</code> component and write these to the <code>FileSystemWritableFileStream</code>.
<br />
<br />
@if (readFile is not null)
{
    <h3>Currently streaming...</h3>
}
else if (SaveFileHandle is not null)
{
    <text>Choose file to Stream From</text>
    <br />
    <InputFile OnChange="OnChange" />
}
else
{
    <button class="btn btn-primary" @onclick=Save>Choose File to Stream To</button>
}

@code {
    FileSystemFileHandle? SaveFileHandle;
    IBrowserFile? readFile;

    public async Task OnChange(InputFileChangeEventArgs args)
    {
        if (SaveFileHandle is not null)
        {
            readFile = args.File;
            
            using var stream = readFile.OpenReadStream(maxAllowedSize: 10000000000);
            using var writable = await SaveFileHandle.CreateWritableAsync(new() { KeepExistingData = false });
            await stream.CopyToAsync(writable);
            SaveFileHandle = null;
            readFile = null;
            Console.WriteLine("Done streaming!");
        }
    }

    public async Task Save()
    {
        SaveFileHandle = await FileSystemAccessService.ShowSaveFilePickerAsync();
        StateHasChanged();
    }
}
